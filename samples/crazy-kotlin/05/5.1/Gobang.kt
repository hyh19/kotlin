

/**
 * Description:<br>
 * 网站: <a href="http://www.crazyit.org">疯狂Java联盟</a><br>
 * Copyright (C), 2001-2018, Yeeku.H.Lee<br>
 * This program is protected by copyright laws.<br>
 * Program Name:<br>
 * Date:<br>
 * @author Yeeku.H.Lee kongyeeku@163.com<br>
 * @version 1.0<br>
 */
// 定义棋盘的大小
val BOARD_SIZE = 15
// 定义一个二维数组来充当棋盘
var board = Array(BOARD_SIZE, {Array(BOARD_SIZE, {""})})
fun initBoard(){
	// 把每个元素赋为"╋"，用于在控制台画出棋盘
	for (i in 0 until BOARD_SIZE){
		for (j in 0 until BOARD_SIZE){
			board[i][j] = "╋"
		}
	}
}
// 在控制台输出棋盘的方法
fun printBoard(){
	// 打印每个数组元素
	for (i in 0 until BOARD_SIZE){
		for ( j in 0 until BOARD_SIZE ){
			// 打印数组元素后不换行
			print(board[i][j])
		}
		// 每打印完一行数组元素后输出一个换行符
		println()
	}
}
fun main(args: Array<String>){
	initBoard()
	printBoard()
	var inputStr = readLine()
	while (inputStr != null){
		// 将用户输入的字符串以逗号（,）作为分隔符，分隔成2个字符串
		var posStrArr = inputStr.split(",")
		// 将2个字符串转换成用户下棋的坐标
		var xPos = posStrArr[0].toInt()
		var yPos = posStrArr[1].toInt()
		// 把对应的数组元素赋为"●"。
		board[yPos - 1][xPos - 1] = "●"
		/*
		 电脑随机生成2个整数，作为电脑下棋的坐标，赋给board数组
		 还涉及
			1．坐标的有效性，只能是数字，不能超出棋盘范围
			2．下的棋的点，不能重复下棋
			3．每次下棋后，需要扫描谁赢了
		 */
		printBoard()
		println("请输入您下棋的坐标，应以x,y的格式：")
		inputStr = readLine()
	}
}
